Developing data products: Shiny Application `Texas housing sale price`
==================================
author: Anna Teplukhina
date: 14 July 2022

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
library(ggplot2)
```

Overview
==================================
This Shiny App is dedicated to predicting housing median sale prices (MSP) in multiple Texas cities. There are multiple factors that can affect the final price, in particular: location/city; season/month; year itself since house prices usually go up.

This application predicts a median sale price per city, month and year. To build a predictive linear model the data set `txhousing` collected in 2000-2015 is used.

Here one can find the Shiny application: [https://ateplu.shinyapps.io/Texas-housing-sale-price/](https://ateplu.shinyapps.io/Texas-housing-sale-price/)

A corresponding GitHub project with ui.R and server.R files is available here:
[https://github.com/ateplu/Developing-Data-Products-Course-Project-Shiny-App](https://github.com/ateplu/Developing-Data-Products-Course-Project-Shiny-App)

Data overview 1
==================================
First, let's look at the data set `txhousing`.
```{r}
data("txhousing") # Load the data set
txhousing[1:5,c(1:3,6)] # Display the first 5 rows and main columns
```
To get a certain MSP, in this application a user should specify a city, a month and a year. Data points are fitted as `median` vs `year` for selected `city` and `month`.

Data overview 2
==================================
There are 46 cities and data are collected for years 2000-2015 for each month.
```{r, echo=TRUE}
summary(unique(txhousing$city))
unique(txhousing$year)
```

Sample plot for Austin
==================================
Here is a sample plot made for Austin data with `ggplot2`. During the year price changes depend on the season (January seems to be a low one).
The observed trend is a continuous increase in MSP.
```{r, fig.width = 14, fig.height=5}
sset <- subset(txhousing,city=="Austin")
p <- ggplot(data=sset, mapping=aes(x=year,y=median)) + geom_point()
p + geom_point(aes(colour = factor(month)), size = 3)
```





